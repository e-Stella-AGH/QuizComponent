{"version":3,"sources":["services/QuizService.tsx","components/Quiz.js","components/QuizForm/validate.js","components/QuizForm/QuizForm.js","App.tsx","reportWebVitals.ts","store.js","index.tsx"],"names":["api","QuizComponent","exit","quiz","showDefaultResult","customResultPage","obj","console","log","onClick","validate","values","errors","quizTitle","questions","length","questionsArrayErrors","forEach","question","questionIndex","questionErrors","questionType","answers","answerArrayErrors","answer","answerIndex","_error","correctAnswer","QuizForm","renderInputField","input","label","type","meta","touched","error","placeholder","renderTextareaField","renderSelectField","children","renderSelectQuestionTypeField","renderTextAnswers","fields","push","map","index","title","remove","Field","name","component","value","className","renderQuestions","submitFailed","FieldArray","this","props","handleSubmit","pristine","reset","submitting","onSubmit","disabled","Component","reduxForm","form","selector","formValueSelector","connect","state","App","useState","quizes","setQuizes","isAdding","setIsAdding","useEffect","result","copyQuizes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","formReducer","createStore","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.09c508c3.chunk.js","sourcesContent":["\r\n\r\nexport const api = {\r\n\r\n    getQuiz: function(){\r\n        return {\r\n            \"quizTitle\": \"React Quiz Component Demo\",\r\n            \"quizSynopsis\": \"Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim\",\r\n            \"questions\": [\r\n              {\r\n                \"question\": \"How can you access the state of a component from inside of a member function?\",\r\n                \"questionType\": \"text\",\r\n                \"questionPic\": \"https://dummyimage.com/600x400/000/fff&text=X\", // if you need to display Picture in Question\r\n                \"answerSelectionType\": \"single\",\r\n                \"answers\": [\r\n                  \"this.getState()\",\r\n                  \"this.prototype.stateValue\",\r\n                  \"this.state\",\r\n                  \"this.values\"\r\n                ],\r\n                \"correctAnswer\": \"3\",\r\n                \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\r\n                \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\r\n                \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\r\n                \"point\": \"20\"\r\n              },\r\n              {\r\n                \"question\": \"ReactJS is developed by _____?\",\r\n                \"questionType\": \"text\",\r\n                \"answerSelectionType\": \"single\",\r\n                \"answers\": [\r\n                  \"Google Engineers\",\r\n                  \"Facebook Engineers\"\r\n                ],\r\n                \"correctAnswer\": \"2\",\r\n                \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\r\n                \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\r\n                \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\r\n                \"point\": \"20\"\r\n              },\r\n              {\r\n                \"question\": \"ReactJS is an MVC based framework?\",\r\n                \"questionType\": \"text\",\r\n                \"answerSelectionType\": \"single\",\r\n                \"answers\": [\r\n                  \"True\",\r\n                  \"False\"\r\n                ],\r\n                \"correctAnswer\": \"2\",\r\n                \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\r\n                \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\r\n                \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\r\n                \"point\": \"10\"\r\n              },\r\n              {\r\n                \"question\": \"Which of the following concepts is/are key to ReactJS?\",\r\n                \"questionType\": \"text\",\r\n                \"answerSelectionType\": \"single\",\r\n                \"answers\": [\r\n                  \"Component-oriented design\",\r\n                  \"Event delegation model\",\r\n                  \"Both of the above\",\r\n                ],\r\n                \"correctAnswer\": \"3\",\r\n                \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\r\n                \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\r\n                \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\r\n                \"point\": \"30\"\r\n              },\r\n              {\r\n                \"question\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\",\r\n                \"questionType\": \"photo\",\r\n                \"answerSelectionType\": \"single\",\r\n                \"answers\": [\r\n                  \"https://dummyimage.com/600x400/000/fff&text=A\",\r\n                  \"https://dummyimage.com/600x400/000/fff&text=B\",\r\n                  \"https://dummyimage.com/600x400/000/fff&text=C\",\r\n                  \"https://dummyimage.com/600x400/000/fff&text=D\"\r\n                ],\r\n                \"correctAnswer\": \"1\",\r\n                \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\r\n                \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\r\n                \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\r\n                \"point\": \"20\"\r\n              },\r\n              {\r\n                \"question\": \"What are the advantages of React JS?\",\r\n                \"questionType\": \"text\",\r\n                \"answerSelectionType\": \"multiple\",\r\n                \"answers\": [\r\n                  \"React can be used on client and as well as server side too\",\r\n                  \"Using React increases readability and makes maintainability easier. Component, Data patterns improves readability and thus makes it easier for manitaining larger apps\",\r\n                  \"React components have lifecycle events that fall into State/Property Updates\",\r\n                  \"React can be used with any other framework (Backbone.js, Angular.js) as it is only a view layer\"\r\n                ],\r\n                \"correctAnswer\": [1, 2, 4],\r\n                \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\r\n                \"messageForIncorrectAnswer\": \"Incorrect answer. Please try again.\",\r\n                \"explanation\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\r\n                \"point\": \"20\"\r\n              },\r\n            ]\r\n          } \r\n    },\r\n}","import React from 'react';\r\nimport {api} from '../services/QuizService'\r\nimport Quiz from 'react-quiz-component';\r\n\r\n\r\nfunction QuizComponent({exit,quiz}) {\r\n\r\n  const renderCustomResultPage = (obj) => {\r\n    console.log(obj);\r\n    return (\r\n      <div>\r\n        This is a custom result page. You can use obj to render your custom result page\r\n        <button onClick={exit}>Exit</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <Quiz quiz={quiz} showDefaultResult={false} customResultPage={renderCustomResultPage} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizComponent;\r\n","const validate = values => {\r\n    const errors = {}\r\n    if (!values.quizTitle) {\r\n      errors.quizTitle = 'Required'\r\n    }\r\n    if (!values.questions || !values.questions.length) {\r\n      errors.questions = { _error: 'At least one question must be entered' }\r\n    } else {\r\n      const questionsArrayErrors = []\r\n      values.questions.forEach((question, questionIndex) => {\r\n        const questionErrors = {}\r\n        if (!question || !question.question) {\r\n          questionErrors.question = 'Required'\r\n          questionsArrayErrors[questionIndex] = questionErrors\r\n        }\r\n          if (!question.questionType){\r\n            questionErrors.questionType =  'Required';\r\n            questionsArrayErrors[questionIndex] = questionErrors;\r\n            \r\n          }\r\n  \r\n        if (question && question.answers && question.answers.length) {\r\n          const answerArrayErrors = []\r\n          question.answers.forEach((answer, answerIndex) => {\r\n          if (!answer || !answer.length) {\r\n              answerArrayErrors[answerIndex] = 'Required'\r\n            }\r\n          })\r\n  \r\n          if (answerArrayErrors.length) {\r\n            questionErrors.answers = answerArrayErrors\r\n            questionsArrayErrors[questionIndex] = questionErrors\r\n          }\r\n  \r\n          if (question.answers.length > 4) {\r\n            if (!questionErrors.answers) {\r\n              questionErrors.answers = []\r\n            }\r\n            questionErrors.answers._error = 'No more than four answers allowed'\r\n            questionsArrayErrors[questionIndex] = questionErrors\r\n          }\r\n          if (!question.correctAnswer){\r\n            questionErrors.correctAnswer =  'Required';\r\n            questionsArrayErrors[questionIndex] = questionErrors;\r\n           }\r\n        }\r\n  \r\n        if (!question.answers || question.answers.length === 0) {\r\n          if (!questionErrors.answers) {\r\n            questionErrors.answers = []\r\n          }\r\n          questionErrors.answers._error = 'At least one answer must be entered'\r\n          questionsArrayErrors[questionIndex] = questionErrors\r\n        }\r\n  \r\n      })\r\n  \r\n      if (questionsArrayErrors.length) {\r\n        errors.questions = questionsArrayErrors\r\n      }\r\n    }\r\n    return errors\r\n  }\r\n  \r\n  export default validate","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Field, FieldArray, reduxForm, formValueSelector } from 'redux-form';\r\nimport range from 'lodash/range'\r\nimport validate from './validate';\r\n\r\nclass QuizForm extends Component {\r\n\r\n  renderInputField = ({ input, label, type, meta: { touched, error } }) => (\r\n    <div>\r\n      <label>{label}</label>\r\n      <div>\r\n        <input {...input} type={type} placeholder={label} />\r\n        {touched && error && <span>{error}</span>}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  renderTextareaField = ({ input, label, type, meta: { touched, error } }) => (\r\n    <div>\r\n      <label>{label}</label>\r\n      <div>\r\n        <textarea {...input} type={type} placeholder={label} />\r\n        {touched && error && <span>{error}</span>}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n   renderSelectField = ({ input, label, type, meta: { touched, error }, children }) => (\r\n    <div>\r\n      <label>{label}</label>\r\n      <div>\r\n        <select {...input} >\r\n          {children}\r\n        </select>\r\n        {touched && error && <span>{error}</span>}\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n   renderSelectQuestionTypeField = ({ input, label, type, meta: { touched, error }, children }) => (\r\n    <div>\r\n      <label>{label}</label>\r\n      <div>\r\n        <select {...input} >\r\n          {children}\r\n        </select>\r\n        {touched && error && <span>{error}</span>}\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n   renderTextAnswers = ({ fields, question, meta: { error } }) => (\r\n    <ul>\r\n      <li>\r\n        <button type=\"button\" onClick={() => fields.push()}>Add Answer</button>\r\n      </li>\r\n      {fields.map((answer, index) => (\r\n        <li key={index}>\r\n          <button\r\n            type=\"button\"\r\n            title=\"Remove Answer\"\r\n            onClick={() => fields.remove(index)}\r\n          />\r\n          <Field\r\n            name={answer}\r\n            type=\"text\"\r\n            component={this.renderInputField}\r\n            label={`Answer #${index + 1}`}\r\n          />\r\n        </li>\r\n      ))}\r\n          <li>\r\n           <Field\r\n            name={`${question}.correctAnswer`}\r\n            component={this.renderSelectField}\r\n            label=\"Correct Answer\"\r\n          >\r\n            <option value=\"\">Please select correct answer</option>\r\n             {fields.map((answer, index) => (\r\n               <option key={index+1} value={index+1}>{`Answer #${index + 1}`}</option>\r\n             ))}\r\n          </Field>\r\n          </li>\r\n    \r\n      {error && <li className=\"error\">{error}</li>}\r\n    </ul>\r\n  );\r\n  \r\n  \r\n   renderQuestions = ({ fields, meta: { touched, error, submitFailed } }) => (\r\n    <ul>\r\n      <li>\r\n        <button type=\"button\" onClick={() => fields.push({})}>Add Question</button>\r\n        {(touched || submitFailed) && error && <span>{error}</span>}\r\n      </li>\r\n      {fields.map((question, index) => (\r\n        <li key={index}>\r\n          <button\r\n            type=\"button\"\r\n            title=\"Remove Question\"\r\n            onClick={() => fields.remove(index)}\r\n          />\r\n          <h4>Question #{index + 1}</h4>\r\n          <Field\r\n            name={`${question}.question`}\r\n            type=\"text\"\r\n            component={this.renderInputField}\r\n            label=\"Question Title\"\r\n          />\r\n          <Field\r\n            name={`${question}.questionType`}\r\n            component={this.renderSelectQuestionTypeField}\r\n            label=\"Question Type\"\r\n          >\r\n            <option value=\"\">Please select a question type</option>\r\n            <option value=\"text\">Text</option>\r\n            <option value=\"photo\">Photo</option>\r\n          </Field>\r\n          <FieldArray name={`${question}.answers`} component={this.renderTextAnswers} question={question} />\r\n          <Field\r\n            name={`${question}.messageForCorrectAnswer`}\r\n            type=\"text\"\r\n            component={this.renderTextareaField}\r\n            label=\"Message for Correct Answer\"\r\n          />\r\n          <Field\r\n            name={`${question}.messageForIncorrectAnswer`}\r\n            type=\"text\"\r\n            component={this.renderTextareaField}\r\n            label=\"Message for Incorrect Answer\"\r\n          />\r\n          <Field\r\n            name={`${question}.explanation`}\r\n            type=\"text\"\r\n            component={this.renderTextareaField}\r\n            label=\"Explanation\"\r\n          />\r\n           <Field\r\n            name={`${question}.point`}\r\n            type=\"number\"\r\n            component={this.renderInputField}\r\n            label=\"Point\"\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  render() {\r\n\r\n  const { handleSubmit, pristine, reset, submitting } = this.props;\r\n\r\n    return (\r\n      <div className=\"QuizForm\">\r\n         <form name=\"quiz-form\" onSubmit={handleSubmit}>\r\n\t      <Field\r\n\t        name=\"quizTitle\"\r\n\t        type=\"text\"\r\n\t        component={this.renderInputField}\r\n\t        label=\"Quiz Title\"\r\n\t      />\r\n        <Field\r\n\t        name=\"quizSynopsis\"\r\n\t        type=\"text\"\r\n\t        component={this.renderTextareaField}\r\n\t        label=\"Quiz Synopsis\"\r\n\t      />\r\n\t      <FieldArray name=\"questions\" component={this.renderQuestions} />\r\n\t      <div>\r\n\t        <button type=\"submit\" disabled={submitting}>Submit</button>\r\n\t        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\r\n\t          Clear Values\r\n\t        </button>\r\n\t      </div>\r\n\t    </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nQuizForm = reduxForm({\r\n  form: 'quizForm',\r\n  validate\r\n})(QuizForm);\r\n\r\nconst selector = formValueSelector('quizForm');\r\n\r\nQuizForm = connect(\r\n  state => {\r\n    const questions = selector(state, 'questions');\r\n    const questionType = questions && questions.map(question => question.questionType);\r\n\r\n    return { questionType: questionType }\r\n  }\r\n)(QuizForm)\r\n\r\n\r\nexport default QuizForm;","import './App.css';\nimport QuizComponent from './components/Quiz';\nimport QuizForm from './components/QuizForm/QuizForm';\nimport { api } from './services/QuizService'\nimport { useState, useEffect } from 'react'\n\nfunction App() {\n\n  const [quizes, setQuizes] = useState<Array<object>>([])\n  const [isAdding, setIsAdding] = useState<null | boolean>(null)\n\n  useEffect(() => {\n    const result = [api.getQuiz()];\n    setQuizes(result)\n  }, [])\n\n  const saveForm = (value: Object) => {\n    const copyQuizes = [...quizes]\n    copyQuizes.push(value)\n    setQuizes(copyQuizes)\n    setIsAdding(null)\n  }\n\n\n  if (isAdding === null) {\n    return (\n      <div>\n        <button onClick={() => setIsAdding(true)}>Add Quiz</button>\n        <button onClick={() => setIsAdding(false)}>Start Quiz</button>\n      </div>\n    )\n  } else if (isAdding == true)\n    return (<QuizForm onSubmit={saveForm} />)\n  else \n    return (<QuizComponent exit={() => setIsAdding(null)} quiz={quizes[quizes.length-1]} />)\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\nconst rootReducer = combineReducers({\r\n  form: formReducer\r\n});\r\n\r\nexport default createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}